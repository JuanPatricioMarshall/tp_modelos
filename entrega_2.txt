Ideas de como van a resolver esta instancia
Para esta 2da entrega, al analizar que la entrada es mucho mas grande que la de la 1er entrega, fuerza bruta capaz no
es una opcion viable

Comentarios sobre los cambios que hagan en el codigo a medida que intentan mejorar el resultado
Por ahora voy a simplemente analizar las dimensiones del nuevo input, y probar mi solucion de la anterior entrega.
En base a esto probablemente tenga mas claro para donde avanzar.

Pasamos de tener 20 prendas y 120 restricciones a 385 prendas y 19095 restricciones.
No deberia ser un problema para mi solucion original, ya que era una recorrida lineal + un sort de n * log n +
la iteracion de eso.
Despues de intentar subir la solucion con el algoritmo sin modificar, no pude ya que mi modelo/programa estaba generando
soluciones en realidad incompatibles, probablemente no tomando en cuenta varias restricciones.
Despues de analizar rapido una de las restricciones que no se estaban cumpliendo, me di cuenta que el formato del input.txt
cambio un poco.
Antes, cada restriccion i j (prenda i no se puede lavar con prenda j) estaba duplicada por la restriccion j i.
Esta actual version asume que se sobreentiende que si existe la incompatibilidad i j, j i tambien existe pero no
tiene que escribirla. Por esto ninguna prenda i tiene escritas restricciones a un j mas chico que ese i (por que si tenia
una restriccion ya hubiese aparecido antes en el listado).
Y estoy muy seguro que mi programa necesitaba tener ambas restricciones para poder armar soluciones compatibles.
Asi que cambie para que en mi diccionario en memoria se "indexe" la incompatiblidad i j para ambos sentidos.
Con ese ultimo cambio, logre obtener una solucion compatible con un puntaje de 493, usando 40 tandas de lavados.

Voy a probar que pasa si en vez de iterar por las prendas mas costosas en tiempo, ordeno por las de menos tiempo.
Ya de una sin subir la solucion puedo anticipar que aumente la cantidad de lavados, por lo que es probable que el score
haya empeorado. Lo cual tiene sentido siguiendo mi logica original "Greedy" de juntar las prendas mas costosas juntas
con el objetivo de maximizar el tiempo ahorrado.
Como habia previsto, esto solo empeoro mi score a 757. Lo cual tiene sentido, ya que fui juntando prendas compatibles
fijando la mas chica posible primero. Rollbackeo a la version anterior.

Voy a probar un enfoque distinto. Voy a intentar de analizarlo como un grafo, donde cada prenda es un nodo y cada
incompatibilidad es una arista. De esta manera, voy a buscar los conjuntos independientes mas grandes, que si no me estoy
confundiendo van a ser grupos de prendas compatibles.
Definitivamente hay espacio para optimizar esto usando de alguna forma los pesos, que estoy completamente obviando.
No creo que esta corrida performe mejor que la de 493. Ya de por si puedo ver que armo mas tandas de lavado que esa (45 vs 40)
Como pensaba, performo peor que la version anterior, con un gasto de 756.

nit: limpie un poco el txt de entrega_2 para que quede mas corto. Ver historial entero para todos los detalles de ser necesario.

Luego del intento fallido de conjuntos independientes de incompatibilidades, fui por lo contrario. Buscar dentro de las
compatibilidades los cliques que mas peso tengan. De esta forma, deberia poder armar el lavado mas pesado en cada tanda.
Sin embargo, esto no es lo optimo ya que en cada clique en realidad solo me interesa la prenda mas pesada, no el peso del clique
en conjunto. Pero agrupar lavados que sean muy pesados en total, es una buena aproximacion para mi, ya que se ahorra mucho
en cada armado. Tiene potencial ya que armo solo 22 tandas de lavado. Aunque me da miedo que este ignorando alguna
incompatibilidad.

Voy a probar un simple cambio, voy a gurdar como peso de la prenda en el grafo el peso de la maxima compatible.
Sinceramente no creo que performe mejor, pero intuitivamente pareceria que si quiero minimizar el gasto de tiempo en lavado
deberia armar lavados maximizando el ahorro.
Esto mejoro considerablemente llegando al mejor puntaje hasta ahora, de 317.

Mi ultimo intento mejoro el puntaje. Voy a probar yendo un paso mas, solo updateando el peso en el grafo si el peso nuevo
es mejor que el anterior.
Fue un poco peor que el anterior, 330.

Voy a hacer una ultima prueba quedandome con el minimo de los pesos que voy viendo.
Esto me llevo a un puntaje de 362. Peor que antes
Ya acercandome a la fecha de entrega y viendo el ranking como esta, a menos que se me ocurra algo estos dias el algoritmo
que dio 317 va a ser mi mejor solucion.

Comentarios finales
Ya aumentando el tama√±o de la entrada, aumentando muchisimo la cantidad de prendas y aun mas de restricciones, fureza bruta
no es una opcion.
Mi solucion anterior ya de por si era una aproximacion Greedy, y obtenia resultados bastante buenos y de manera muy rapida,
pero no lo suficientemente precisa como veia que otros habian podido alcanzar en la tabla de rankings.
Investigando un poco, releyendo un poco de teoria de grafos estuve jugando un rato con sets de prendas independientes lo mas
grande posibles. Esto performo peor que mi solucion anterior ya que no consideraba para nada los pesos de las prendas.
Pero luego utilizando la teoria de cliques (subgrafos completos dentro de un grafo) pude armar un algoritmo donde usando
el algoritmo preescrito de clique de peso maximo, armaba cada tanda de lavado, actualizando el grafo de compatibilidades
y volviendo a repetir el calculo del clique de peso maximo sobre el nuevo estado actual del grafo.
Evidentemente debe haber una vuelta de tuerca mas, capaz deberia actualizar todos los pesos del grafo tomando en cuenta solo
los nodos que quedan en el grafo.

Al final se me ocurrio usar en el peso de la prenda en el grafo la cantidad comaptibilidades. Dandole prioridad a las prendas
mas incompatibles. Ya en local veo que mejore de 317 a 308.

Hice una prueba mas calculando el peso solamente como peso * cant_incompatibilidades, consiguiendo un score record (para mi) de 276